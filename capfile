
#load bundler
require 'rubygems'
require 'bundler/setup'

load 'deploy' if respond_to?(:namespace)
Dir['vendor/plugins/*recipes/*.rb'].each { |plugin| load(plugin) }

set :stages, %w!dev acc prod!

require 'capistrano/ext/multistage'
set :default_stage, "dev"

# This should be set to the name of your git repository for traceability. 
# If it's contained in a subfolder, also specify it here, with a trailing slash. 
# 
# E.g.
# set :application, "msit.tafe.qld.gov.au"
# set :sub_folder, "training_web/"
# 
# in most cases, it's the only thing you'll need to change.

set :application, "symfony.forms.education.qld.gov.au"
set :sub_folder, "education/"

# this is a large repo, so only keep a few releases
set :keep_releases, 2

# stuff that usually doesn't change goes below here ----------------------------------------------------------

set :scm, :git
set :deploy_to, "/web/managed/capistrano/#{sub_folder}#{application}"
set :repository, "gitolite@git.training.local:education/forms.education.qld.gov.au/symfony.git"
#set :branch, "master"
#bundle exec cap dev deploy BRANCH=branchname
set :branch, ENV['BRANCH'] || 'master'
set :deploy_via, :remote_cache


after "deploy:update", "deploy:cleanup" 
after "deploy:update", "deploy:mk_links" 

default_run_options[:pty] = true

set :use_sudo, false

set :user, 'deploy'
set :ssh_options, { :forward_agent => true }

namespace :deploy do
	[:start, :stop, :restart, :migrate, :migrations, :finalize_update].each do |t|
		desc "#{t} task is a no-op"
		task t do
			puts "#{t} task is no-op"
			# NO-OP
		end
	end

	desc "Setup creates the required directories on the server"
	task :setup do
		run "mkdir -p '#{deploy_to}/releases'"
	end

	# This is to make apps write to the data directory rather than the app directory
	# NOTE: dirs and files under /web/sites/data/SITE must be created manually
	task :mk_links do
		# Link uploads for eavad
		run "ln -s /web/sites/data/forms.education.qld.gov.au/eavad/uploads /web/sites/apps/forms.education.qld.gov.au/eavad/uploads"
	end
end

